%Diary test 
pi

ans =

    3.1416

xdata = [0 1 2]

xdata =

     0     1     2

ydata = [0 1 4]

ydata =

     0     1     4

eval_lag(xdata, ydata,  3)

ans =

     9

eval_lag(xdata, ydata,  xdata)

ans =

     0     1     4

xdata= [ -3 -2 -1 0 1 2 3]

xdata =

    -3    -2    -1     0     1     2     3

ydata= [1636 247 28 7 4 31 412]

ydata =

        1636         247          28           7           4          31         412

eval_lag(xdata, ydata,  xdata)

ans =

        1636         247          28           7           4          31         412

r=[-2 -1 1 2 3]

r =

    -2    -1     1     2     3

cTrue = poly(r)

cTrue =

     1    -3    -5    15     4   -12

help polyval
 <strong>polyval</strong> Evaluate polynomial.
    Y = <strong>polyval</strong>(P,X) returns the value of a polynomial P evaluated at X. P
    is a vector of length N+1 whose elements are the coefficients of the
    polynomial in descending powers:
 
        Y = P(1)*X^N + P(2)*X^(N-1) + ... + P(N)*X + P(N+1)
 
    The polynomial P is evaluated at all points in X. See POLYVALM for
    evaluation of a polynomial P in a matrix sense.
 
    [Y,DELTA] = <strong>polyval</strong>(P,X,S) uses the optional output structure S created
    by POLYFIT to generate prediction error estimates DELTA. DELTA is an
    estimate of the standard deviation of the error in predicting a future
    observation at X by P(X).
 
    If the coefficients in P are least squares estimates computed by
    POLYFIT, and the errors in the data input to POLYFIT are independent,
    normal, with constant variance, then Y +/- DELTA will contain at least
    50% of future observations at X.
 
    Y = <strong>polyval</strong>(P,X,[],MU) or [Y,DELTA] = <strong>polyval</strong>(P,X,S,MU) uses XHAT =
    (X-MU(1))/MU(2) in place of X. The centering and scaling parameters MU
    are optional output computed by POLYFIT.
 
    Example:
       Evaluate the polynomial p(x) = 3x^2+2x+1 at x = 5,7, and 9:
 
       p = [3 2 1];
       x = [5 7 9];
       y = polyval(p,x)
 
    Class support for inputs P,X,S,MU:
       float: double, single
 
    See also <a href="matlab:help polyfit -displayBanner">polyfit</a>, <a href="matlab:help polyvalm -displayBanner">polyvalm</a>.

    <a href="matlab:doc polyval">Documentation for polyval</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('polyval')">Other functions named polyval</a>

xval=linspace(-2,3,4001);
yvalTrue = polyval(cTrue, xval);
ydata = [0,0,-12,0,0,0]

ydata =

     0     0   -12     0     0     0

xdata = [-2,-1,0,1,2,3]

xdata =

    -2    -1     0     1     2     3

yvalLag = eval_lag(xdata, ydata, xval);
plot(xval,yvalLag,'y','linewidth',4);
hold on
plot(xval,yvalTrue,'k');
hold off
max(abs((yvalTrue-yvalLag)))/max(abs(yvalTrue))

ans =

   1.5399e-15

diary off
